<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Homepage on Yadong Liu | 刘亚东</title>
    <link>https://liuyadong.github.io/</link>
    <description>Recent content in Homepage on Yadong Liu | 刘亚东</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 20 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://liuyadong.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Setting up sen2r</title>
      <link>https://liuyadong.github.io/blog/2022-01-03-setting-up-sen2r/</link>
      <pubDate>Mon, 03 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://liuyadong.github.io/blog/2022-01-03-setting-up-sen2r/</guid>
      <description>  Step 1. Install dependencies brew install aria2
 brew install google-cloud-sdk, configure with gcloud init
 download Sen2Cor, then sh Sen2Cor-02.09.00-Darwin64.run --target ~/.sen2r/sen2cor290
 brew install gdal -s
   Step 2. Configure paths (~/.sen2r/paths.json) { &amp;quot;aria2c&amp;quot;: [&amp;quot;/opt/homebrew/bin/aria2c&amp;quot;], &amp;quot;gsutil&amp;quot;: [&amp;quot;/opt/homebrew/bin/gsutil&amp;quot;], &amp;quot;sen2cor&amp;quot;: [&amp;quot;~/.sen2r/sen2cor290/bin/L2A_Process&amp;quot;], &amp;quot;gdalinfo&amp;quot;: [&amp;quot;/opt/homebrew/bin/gdalinfo&amp;quot;], &amp;quot;ogrinfo&amp;quot;: [&amp;quot;/opt/homebrew/bin/ogrinfo&amp;quot;], &amp;quot;gdal_translate&amp;quot;: [&amp;quot;/opt/homebrew/bin/gdal_translate&amp;quot;], &amp;quot;gdalwarp&amp;quot;: [&amp;quot;/opt/homebrew/bin/gdalwarp&amp;quot;], &amp;quot;gdalbuildvrt&amp;quot;: [&amp;quot;/opt/homebrew/bin/gdalbuildvrt&amp;quot;], &amp;quot;gdaldem&amp;quot;: [&amp;quot;/opt/homebrew/bin/gdaldem&amp;quot;], &amp;quot;gdal_calc&amp;quot;: [&amp;quot;/opt/homebrew//bin/gdal_calc.py&amp;quot;], &amp;quot;gdal_polygonize&amp;quot;: [&amp;quot;/opt/homebrew//bin/gdal_polygonize.py&amp;quot;], &amp;quot;gdal_fillnodata&amp;quot;: [&amp;quot;/opt/homebrew//bin/gdal_fillnodata.py&amp;quot;] }  </description>
    </item>
    
    <item>
      <title>Setting up Wolfram Engine</title>
      <link>https://liuyadong.github.io/blog/2021-06-07-wolfram-engine/</link>
      <pubDate>Mon, 07 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://liuyadong.github.io/blog/2021-06-07-wolfram-engine/</guid>
      <description>Step 1. Install Wolfram Engine Get a free licence for Wolfram Engine
 Install Wolfram Engine by
 brew install wolfram-engine or download here  Download and install WolframScript here
 Run wolframscript then type Wolfram ID and password (only once) to activate
   Step 2. Install Wolfram Language kernel for Jupyter Follow instructions from WikframResearch/WolframLanguageForJupyter
git clone https://github.com/WolframResearch/WolframLanguageForJupyter.git cd WolframLanguageForJupyter ./configure-jupyter.wls add &amp;quot;path/to/Wolfram-Engine-binary--not-wolframscript&amp;quot; &amp;quot;path/to/Jupyter-binary&amp;quot;  Run Jupyter notebook from VS code Select the Wolfram Language kernel</description>
    </item>
    
    <item>
      <title>全球主要谷物年产量：1961-2016</title>
      <link>https://liuyadong.github.io/blog/2018-04-27-major-cereals-production/</link>
      <pubDate>Fri, 27 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://liuyadong.github.io/blog/2018-04-27-major-cereals-production/</guid>
      <description>最近读到这篇论文《Genomic variation in 3,010 diverse accessions of Asian cultivated rice》才知道原来 Japonica rice 是籼稻、Indica rice 是粳（geng）稻。作为农学专业的学生，这是不</description>
    </item>
    
    <item>
      <title>远方再好，也只是远方</title>
      <link>https://liuyadong.github.io/blog/2018-04-04-far-far-away/</link>
      <pubDate>Wed, 04 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://liuyadong.github.io/blog/2018-04-04-far-far-away/</guid>
      <description>晚上听到赵雷的《家乡》，一下子又被击中了。歌词是这样写的： 推开那扇锁了很久的门，房子里已无等待的人，我就像是从远方来，路过这里的客人。 在外这</description>
    </item>
    
  </channel>
</rss>
